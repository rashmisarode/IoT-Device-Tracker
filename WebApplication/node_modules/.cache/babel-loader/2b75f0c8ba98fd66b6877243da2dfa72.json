{"ast":null,"code":"export const dataService = {\n  getdbData,\n  sendCommandToIot,\n  getRealTimeData\n};\nexport const apiConfig = {\n  endpointURL: \"https://us-central1-neural-cable-290804.cloudfunctions.net\"\n};\n\nfunction getdbData(fromDate, toDate) {\n  console.log(\"fromDate\" + fromDate);\n  console.log(\"toDate\" + toDate);\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/getData?fromDate=${fromDate}&toDate=${toDate}`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\n\nfunction getRealTimeData(fromDate, toDate) {\n  console.log(\"fromDate\" + fromDate);\n  console.log(\"toDate\" + toDate);\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/getData?fromDate=${fromDate}&toDate=${toDate}`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\n\nfunction sendCommandToIot() {\n  let command = \"test command\";\n  const requestOption = {\n    method: 'POST',\n    body: JSON.stringify({\n      \"command\": command\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/getData`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}","map":{"version":3,"sources":["/home/rashmisarode/git/cmpe297-hw1/WebApplication/src/services/dataService.js"],"names":["dataService","getdbData","sendCommandToIot","getRealTimeData","apiConfig","endpointURL","fromDate","toDate","console","log","requestOption","method","headers","fetch","then","res","json","command","body","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,gBAFuB;AAGvBC,EAAAA;AAHuB,CAApB;AAMP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,WAAW,EAAE;AADQ,CAAlB;;AAIP,SAASJ,SAAT,CAAmBK,QAAnB,EAA6BC,MAA7B,EAAqC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAWH,QAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAASF,MAArB;AACA,QAAMG,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFS,GAAtB;AAIA,SAAOC,KAAK,CAAE,GAAET,SAAS,CAACC,WAAY,qBAAoBC,QAAS,WAAUC,MAAO,EAAxE,EAA2EG,aAA3E,CAAL,CAA+FI,IAA/F,CAAoGC,GAAG,IAAI;AAC9GP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH;;AAED,SAASb,eAAT,CAAyBG,QAAzB,EAAmCC,MAAnC,EAA2C;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAWH,QAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAASF,MAArB;AACA,QAAMG,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFS,GAAtB;AAIA,SAAOC,KAAK,CAAE,GAAET,SAAS,CAACC,WAAY,qBAAoBC,QAAS,WAAUC,MAAO,EAAxE,EAA2EG,aAA3E,CAAL,CAA+FI,IAA/F,CAAoGC,GAAG,IAAI;AAC9GP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH;;AAED,SAASd,gBAAT,GAA4B;AACxB,MAAIe,OAAO,GAAG,cAAd;AACA,QAAMP,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,MADU;AAElBO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,iBAAWH;AADM,KAAf,CAFY;AAKlBL,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALS,GAAtB;AAOA,SAAOC,KAAK,CAAE,GAAET,SAAS,CAACC,WAAY,UAA1B,EAAqCK,aAArC,CAAL,CAAyDI,IAAzD,CAA8DC,GAAG,IAAI;AACxEP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH","sourcesContent":["export const dataService = {\n    getdbData,\n    sendCommandToIot,\n    getRealTimeData\n}\n\nexport const apiConfig = {\n    endpointURL: \"https://us-central1-neural-cable-290804.cloudfunctions.net\"\n}\n\nfunction getdbData(fromDate, toDate) {\n    console.log(\"fromDate\"+fromDate);\n    console.log(\"toDate\"+toDate);\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/getData?fromDate=${fromDate}&toDate=${toDate}`, requestOption).then(res => {\n        console.log(res); \n        return res.json();\n    })\n}\n\nfunction getRealTimeData(fromDate, toDate) {\n    console.log(\"fromDate\"+fromDate);\n    console.log(\"toDate\"+toDate);\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/getData?fromDate=${fromDate}&toDate=${toDate}`, requestOption).then(res => {\n        console.log(res); \n        return res.json();\n    })\n}\n\nfunction sendCommandToIot() {\n    let command = \"test command\";\n    const requestOption = {\n        method: 'POST',\n        body: JSON.stringify({\n            \"command\": command,\n        }),\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/getData`, requestOption).then(res => {\n        console.log(res); \n        return res.json();\n    })\n}"]},"metadata":{},"sourceType":"module"}